name: Build Docker Image
on:
  workflow_call:
    inputs:
      # -------------------------
      # Inputs for the base image
      # -------------------------
      image_name: # Name of the base image
        required: true
        type: string
      dockerfile_name: # Name of the docker file used to build the base image
        required: true
        type: string
      base_image: # Name of the base image
        required: true
        type: string
      distro: # ROS distro in case of building a ROS image
        required: false
        type: string
      file_triggers: # Files that if modified trigger the build of the image
        required: true
        type: string
      # -------------------------
      # Inputs for the final image
      # -------------------------
      final_image_name:
        required: false
        type: string
        default: ""
      ycm_file:
        required: false
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  # --------------------------------------------------------------
  # --------------------------------------------------------------
  # ---   Builds the base image ----------------------------------
  # --------------------------------------------------------------
  # --------------------------------------------------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Check last modified time of image in registry
        id: modify_date
        run: |
          echo "image=$(date -d \"$(curl -s https://hub.docker.com/v2/repositories/$(echo ${{ inputs.image_name }} | sed 's/:/\/tags\//')\" | jq -r '.last_updated')\" +%s)" >> $GITHUB_OUTPUT
          echo "dockerfile=$(date -d \"$(git log -n 1 --format=%cd --date=iso -- ${{ inputs.dockerfile_name }})\" +%s)" >> $GITHUB_OUTPUT

      - name: Check modified times of trigger files
        id: trigger_files
        run: |
          should_rebuild=0
          image_time=$(date -d "$(curl -s https://hub.docker.com/v2/repositories/$(echo ${{ inputs.image_name }} | sed 's/:/\/tags\//') | jq -r '.last_updated')" +%s)
          echo "image_time=$image_time"
          trigger_files="${{ join(inputs.file_triggers, ' ') }}" #"
          for file in trigger_files ; do
            # GitHub Actions outputs strings with quotes. Strip them and brackets.
            clean_file=$(echo $file | tr -d '[]"')
            file_time=$(date -d "$(git log -1 --format=%cd --date=iso -- $clean_file)" +%s)
            echo "File: $clean_file => $file_time"
            if [ "$image_time" -lt "$file_time" ]; then
              should_rebuild=1
              break
            fi
          done

          echo "should_rebuild=$should_rebuild" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        if: |
          steps.modify_date.outputs.image < steps.modify_date.outputs.dockerfile ||
          steps.trigger_files.should_rebuild
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        if: |
          steps.modify_date.outputs.image < steps.modify_date.outputs.dockerfile ||
          steps.trigger_files.should_rebuild
        uses: docker/setup-buildx-action@v2

      - name: Build and push image
        if: |
          steps.modify_date.outputs.image < steps.modify_date.outputs.dockerfile ||
          steps.trigger_files.should_rebuild
        uses: docker/build-push-action@v3
        with:
          tags: ${{ inputs.image_name }}
          file: ${{ inputs.dockerfile_name }}
          push: true
          build-args: |
            BASEIMAGE=${{ inputs.base_image }}
            ${{ inputs.distro != '' && format('DISTRO={0}', inputs.distro) || '' }}

  # --------------------------------------------------------------
  # --------------------------------------------------------------
  # --------------------------------------------------------------
  # --------------------------------------------------------------
  # ---   Builds the Final image----------------------------------
  # ---   use teh cpp_vim.dockerfile file to build
  # ---   the ready-to-use image
  # --------------------------------------------------------------
  # --------------------------------------------------------------
  # --------------------------------------------------------------
  # --------------------------------------------------------------
  build_final:
    if: ${{ inputs.final_image_name != '' }}
    needs: build_base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Check last modified time of image in registry
        id: modify_date
        run: |
          echo "image=$(date -d \"$(curl -s https://hub.docker.com/v2/repositories/$(echo ${{ inputs.final_image_name }} | sed 's/:/\/tags\//')\" | jq -r '.last_updated')\" +%s)" >> $GITHUB_OUTPUT
          echo "dockerfile=$(date -d \"$(git log -n 1 --format=%cd --date=iso -- cpp_vim.dockerfile)\" +%s)" >> $GITHUB_OUTPUT
          echo "vimrc=$(date -d "$(git log -1 --format=%cd --date=iso -- ./configfiles/vimrc)" +%s)" >> $GITHUB_OUTPUT
          echo "ycm=$(date -d "$(git log -1 --format=%cd --date=iso -- ./configfiles/${{ matrix.docker_image.ycm_file }})" +%s)" >> $GITHUB_OUTPUT
          echo "ctags=$(date -d "$(git log -1 --format=%cd --date=iso -- ./configfiles/ctags)" +%s)" >> $GITHUB_OUTPUT
          echo "gdbinit=$(date -d "$(git log -1 --format=%cd --date=iso -- ./configfiles/gdbinit)" +%s)" >> $GITHUB_OUTPUT
          echo "cmake_kits=$(date -d "$(git log -1 --format=%cd --date=iso -- ./configfiles/cmake_kits.cmake)" +%s)" >> $GITHUB_OUTPUT
          echo "vim_plugins=$(date -d "$(git log -n 1 --format=%cd --date=iso -- ./configfiles/install_vim_plugins.bash)" +%s)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        if: |
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.dockerfile ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.vimrc ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.ycm ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.ctags ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.gdbinit ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.cmake_kits ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.vim_plugins||
          steps.image_modify_date.outputs.value < steps.image_modify_date.outputs.base_image
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        if: |
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.dockerfile ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.vimrc ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.ycm ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.ctags ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.gdbinit ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.cmake_kits ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.vim_plugins||
          steps.image_modify_date.outputs.value < steps.image_modify_date.outputs.base_image
        uses: docker/setup-buildx-action@v2

      - name: Build and push image
        if: |
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.dockerfile ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.vimrc ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.ycm ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.ctags ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.gdbinit ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.cmake_kits ||
          steps.image_modify_date.outputs.value < steps.file_modify_date.outputs.vim_plugins||
          steps.image_modify_date.outputs.value < steps.image_modify_date.outputs.base_image
        uses: docker/build-push-action@v3
        with:
          tags: ${{ inputs.image_name }}
          file: ${{ inputs.dockerfile_name }}
          push: true
          build-args: |
            BASEIMAGE=${{ inputs.base_image }}
            ${{ inputs.distro != '' && format('DISTRO={0}', inputs.distro) || '' }}
