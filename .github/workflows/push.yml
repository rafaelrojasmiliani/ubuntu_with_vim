name: deploy
on: push
jobs:
  deploy_latex:
    name: build image
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@master
        with:
          fetch-depth: 2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get changed files using defaults
        id: changed-files
        uses: tj-actions/changed-files@v34.1.1

      - name: build and push to docker vim with latex
        uses: docker/build-push-action@v2
        with:
          tags: rafa606/vim-with-latex
          file: latex.dockerfile
          push: true
        if: |
          contains(steps.changed-files.outputs.modified_files, 'latex.dockerfile') ||
          contains(steps.changed-files.outputs.modified_files, 'configfiles/vimrc_latex')

  deploy_ros:
    name: Image ${{ matrix.docker_image.image_name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          # ------------ ROS BASE -----------------------------------
          - file_name: "base.dockerfile"
            image_name: "rafa606/ubuntu:18.04"
            base_image: "ubuntu:18.04"

    steps:
      - name: checkout code
        uses: actions/checkout@master
        with:
          fetch-depth: 2

      - name: Check last modified time of Foo Dockerfile
        id: check_foo_modified
        run: |
          echo "::set-output name=modified::$(stat -c %Y foo.dockerfile)"

      - name: Check last modified time of Foo Docker image
        id: check_foo_image_modified
        run: |
          manifest=$(docker manifest inspect ${{ matrix.docker_image.file_name }} 2>/dev/null || true)
          if [ -z "$manifest" ]; then
            echo "::set-output name=modified::0"
          else
            echo "::set-output name=modified::$(date -d "$(echo "$manifest" | jq -r '.lastModified')" +%s)"
          fi

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: build and push ${{ matrix.docker_image.image_name }}
        uses: docker/build-push-action@v3
        with:
          tags: ${{ matrix.docker_image.image_name }}
          file: ${{ matrix.docker_image.file_name }}
          push: true
          build-args: |
            BASEIMAGE=${{ matrix.docker_image.base_image }}
            ROSDISTRO=${{ matrix.docker_image.ros }}
        if: |
          contains(steps.changed-files.outputs.modified_files, ${{ matrix.docker_image.file_name }}) ||
          contains(steps.changed-files.outputs.modified_files, 'configfiles/vimrc') ||
          contains(steps.changed-files.outputs.modified_files, ${{ matrix.docker_image.ycm_file }}) ||
          contains(steps.changed-files.outputs.modified_files, 'configfiles/ctags')
